// <auto-generated />
using System;
using ContatoMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContatoMVC.Migrations
{
    [DbContext(typeof(ContatoContext))]
    [Migration("20231023154511_Alimentando Banco de Dados")]
    partial class AlimentandoBancodeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContatoMVC.Models.ContatoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("telefone");

                    b.Property<int?>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("contatos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "rudolf@gmail.com",
                            Nome = "Rudolf",
                            Telefone = "00 0000-0000",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            Email = "kyrie@gmail.com",
                            Nome = "Kyrie",
                            Telefone = "00 0000-0110",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "maria@gmail.com",
                            Nome = "Maria",
                            Telefone = "00 1010-1110",
                            UsuarioId = 3
                        });
                });

            modelBuilder.Entity("ContatoMVC.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Perfil")
                        .HasColumnType("int")
                        .HasColumnName("perfil");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senha");

                    b.HasKey("Id");

                    b.ToTable("usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 10, 23, 12, 45, 11, 766, DateTimeKind.Local).AddTicks(4849),
                            Email = "nieeg18@gmail.com",
                            Login = "adm",
                            Nome = "Administrador",
                            Perfil = 0,
                            Senha = "40bd001563085fc35165329ea1ff5c5ecbdbbeef"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 10, 23, 12, 45, 11, 766, DateTimeKind.Local).AddTicks(4881),
                            Email = "battler@gmail.com",
                            Login = "BATTLER",
                            Nome = "Battler",
                            Perfil = 1,
                            Senha = "40bd001563085fc35165329ea1ff5c5ecbdbbeef"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2023, 10, 23, 12, 45, 11, 766, DateTimeKind.Local).AddTicks(4905),
                            Email = "beatrice@gmail.com",
                            Login = "BEATRICE",
                            Nome = "Beatrice",
                            Perfil = 1,
                            Senha = "40bd001563085fc35165329ea1ff5c5ecbdbbeef"
                        });
                });

            modelBuilder.Entity("ContatoMVC.Models.ContatoModel", b =>
                {
                    b.HasOne("ContatoMVC.Models.UsuarioModel", "Usuario")
                        .WithMany("Contatos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ContatoMVC.Models.UsuarioModel", b =>
                {
                    b.Navigation("Contatos");
                });
#pragma warning restore 612, 618
        }
    }
}
